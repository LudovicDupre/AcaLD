
public class Brouillon {

	public static void main(String[] args) {
		// Initialization des matrices.
		int[][] firstMatrix = {{1,2,0},
				{4,3,-1}};
		
		int[][] secondMatrix = {{5,2,3},
				{1,3,4}};
		// Print addMatrix()
		int[][] thirdMatrix= addMatrix(firstMatrix,secondMatrix);
		System.out.println("Somme de matrice");
		for (int i=0; i<firstMatrix.length; i++) {
			for (int j=0; j<firstMatrix[0].length; j++) {
				System.out.print(thirdMatrix[i][j]+" ");
			}System.out.println();
		}
		//Print subMatrix()
		System.out.println("Soustraction de matrice");
		int[][] fourthMatrix= subMatrix(firstMatrix,secondMatrix);
		for (int i=0; i<firstMatrix.length; i++) {
			for (int j=0; j<firstMatrix[0].length; j++) {
				System.out.print(fourthMatrix[i][j]+" ");
			}System.out.println();
		}
		System.out.println("Multiplication de matrice");
		// Print mulScalMatrix
		int[][] fifthMatrix= mulScalMatrix(firstMatrix,2);
		for (int i=0; i<firstMatrix.length; i++) {
			for (int j=0; j<firstMatrix[0].length; j++) {
				System.out.print(fifthMatrix[i][j]+" ");
			}System.out.println();
		}
	}
	// Fonction d'addition de matrices.
	public static int[][] addMatrix(int[][] mat1, int[][] mat2) {
		int[][] answer = new int[mat1.length][mat2[0].length];
		for (int row = 0; row<mat1.length; row++) {
			for (int column = 0; column <mat2[0].length; column++) {
				//for (int i=0 ; i< mat1[0].length; i++) {
					answer[row][column] = mat1[row][column]+ mat2[row][column];
				}
			} return answer;
		}
	// Fonction de soustraction de matrices.
	public static int[][] subMatrix(int[][] mat1, int[][] mat2) {
		int[][] answer = new int[mat1.length][mat2[0].length];
		for (int row = 0; row<mat1.length; row++) {
			for (int column = 0; column <mat2[0].length; column++) {
				//for (int i=0 ; i< mat1[0].length; i++) {
					answer[row][column] = mat1[row][column] - mat2[row][column];
				}
			} return answer;
		}
	//Fonction scalaire de matrices.
	public static int[][] mulScalMatrix(int[][] mat1, int s) {
		int[][] answer = new int[mat1.length][mat1[0].length];
		for (int row = 0; row<mat1.length; row++) {
			for (int column = 0; column <mat1[0].length; column++) {
				//for (int i=0 ; i< mat1[0].length; i++) {
					answer[row][column] = mat1[row][column] *s;
				}
			} return answer;
		}	
}